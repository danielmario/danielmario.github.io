<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>tinyhub.tk</title>
	<link href="/atom.xml" rel="self"/>
	<link href="/"/>
	<updated>2016-05-15T10:37:22-03:00</updated>
	<id>http://tinyhub.tk//</id>
	<author>
		<name>Daniel Lima</name>
	</author>

	
	<entry>
		<title>Optiboot for Nanos</title>
		<link href="/blog/2016/05/15/optiboot-for-nanos/"/>
		<updated>2016-05-15T00:00:00-03:00</updated>
		<id>tinyhub.tk/blog/2016/05/15/optiboot-for-nanos</id>
		<content type="html">&lt;p&gt;Optiboot is a smaller and faster bootloader for Arduino, which is already used for Arduino Unos in recent versions of the standard Arduino IDE. Unfortunately the same cannot be said for the other Arduino Boards, so in this article we will use a spare Arduino Uno as an ISP programmer and burn the optiboot bootloader into an Arduino Nano. Let&#39;s go.&lt;/p&gt;

&lt;p&gt;First, we need to upload the ArduinoISP sketch to the Uno board (to use it as a programmer). Connect the Arduino Uno to the USB port. Open the menu &lt;strong&gt;File &gt; Examples &gt; 11.ArduinoISP &gt; ArduinoISP&lt;/strong&gt;, then select the Uno board (&lt;strong&gt;Tools &gt; Board &gt; Arduino/Genuino Uno&lt;/strong&gt;) and its COM port (e.g. &lt;strong&gt;Tools &gt; Port &gt; COM3&lt;/strong&gt;). Finally, click &lt;strong&gt;Sketch &gt; Upload&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now we need to install the Optiboot boards in the Arduino IDE. In the menu &lt;strong&gt;File &gt; Preferences&lt;/strong&gt;, copy and paste the URL &lt;code&gt;https://github.com/Optiboot/optiboot/releases/download/v6.2/package_optiboot_optiboot-additional_index.json&lt;/code&gt; to the &lt;strong&gt;Additional Boards Manager URLs&lt;/strong&gt; text box, then click OK and go to &lt;strong&gt;Tools &gt; Board &gt; Boards Manager...&lt;/strong&gt; where you can search and install the &lt;strong&gt;Optiboot 6.2&lt;/strong&gt; package.&lt;/p&gt;

&lt;p&gt;When the process is complete, connect the ICSP Nano pins to the Uno board: pins 11, 12, 13, 5V and GND of the Uno to the respective pins in the Nano; and pin 10 of the Uno to the RST (reset) pin in the Nano.&lt;/p&gt;

&lt;p&gt;After this, restart the Arduino IDE, change the board type to &lt;strong&gt;Tools &gt; Board &gt; Optiboot on 32-pin CPUs&lt;/strong&gt;, the &lt;strong&gt;Tools &gt; Port&lt;/strong&gt; to the Uno serial port, the programmer to &lt;strong&gt;Tools &gt; Programmer &gt; Arduino as ISP&lt;/strong&gt; and click &lt;strong&gt;Tools &gt; Burn Bootloader&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now that the Nano has the Optiboot bootloader, you can disconnect the Uno and use the Nano normally. Just remember to set the board to one of the &lt;strong&gt;Optiboot&lt;/strong&gt; options and change &lt;strong&gt;Tools &gt; Port&lt;/strong&gt; to the Nano COM port before uploading your sketch.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>YCM and MSYS2</title>
		<link href="/blog/2016/04/26/ycm-on-msys2/"/>
		<updated>2016-04-26T00:00:00-03:00</updated>
		<id>tinyhub.tk/blog/2016/04/26/ycm-on-msys2</id>
		<content type="html">&lt;p&gt;MSYS2 is a fantastic project for running ported GNU/Linux software on MS Windows natively, but unfortunately YouCompleteMe does not build cleanly with msys2-x86_64. If we try to run &lt;code&gt;python2 install.py&lt;/code&gt;, it fails with errors in LONG_BIT definitions and object linking. Examining the files under &lt;code&gt;third-party/ycmd&lt;/code&gt; sources, it seems that there are misconfigured build options: 1) SIZEOF_LONG is defined as 4, which is incorrect in a 64-bit environment; 2) there are no checks for MSYS environment, and because cmake defines MSYS as an &quot;UNIX&quot; environment instead of a &quot;WIN32&quot; one, some of the necessary definitions (dllimport, BOOST_PYTHON_SOURCE and others) will be missing. All we need to do is fix the wrong definition and put a few checks in the ycmd&#39;s CMakeLists. Here is &lt;a href=&quot;https://gist.github.com/danielmario/639a487949837422485740dbacf09509&quot;&gt;the patch file&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S git cmake gcc python2
cd ~/.vim/plugged/YouCompleteMe
git pull &amp;amp;&amp;amp; git submodule update --init --recursive
patch -p1 -d third-party/ycmd &amp;lt; ~/Downloads/msys2-ycm.patch
python2 install.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I left Clang out because it is still buggy, but at least we have YCM up and running! :]&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>New Year</title>
		<link href="/blog/2015/12/30/new-year/"/>
		<updated>2015-12-30T00:00:00-02:00</updated>
		<id>tinyhub.tk/blog/2015/12/30/new-year</id>
		<content type="html">&lt;p&gt;Another year comes, so it is time for renewed spirits and happy faces!
I just wish to empty the drawer of interrupted projects (and make this blog roll.)&lt;/p&gt;

&lt;p&gt;Happy 2016!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>20th Million Man March</title>
		<link href="/blog/2015/10/07/million-man-march/"/>
		<updated>2015-10-07T00:00:00-03:00</updated>
		<id>tinyhub.tk/blog/2015/10/07/million-man-march</id>
		<content type="html">&lt;p&gt;In three days the &lt;a href=&quot;http://en.wikipedia.org/wiki/Million_Man_March&quot;&gt;20th Million Man March&lt;/a&gt;
will happen.
I made this T-Shirt design for one of the attendant groups, but got no response yet...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015/tshirt-million-man.jpg&quot; alt=&quot;20thMMM T-Shirt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Simple and effective.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Under construction</title>
		<link href="/meta/2015/10/01/under-construction/"/>
		<updated>2015-10-01T00:00:00-03:00</updated>
		<id>tinyhub.tk/meta/2015/10/01/under-construction</id>
		<content type="html">&lt;p&gt;With barely a month left, I&#39;m suddenly thinking about the
&lt;a href=&quot;http://codegeist.devpost.com&quot;&gt;Codegeist 2015 Hackaton&lt;/a&gt;. So
tinyhub, you will be both my vendor identity and my development
blog. Let&#39;s see what happens.&lt;/p&gt;
</content>
	</entry>
	

</feed>
